<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.rmq.dal.mapper.MessageMapper">
  <resultMap id="BaseResultMap" type="com.cn.rmq.api.model.po.Message">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="consumer_queue" jdbcType="VARCHAR" property="consumerQueue" />
    <result column="resend_times" jdbcType="SMALLINT" property="resendTimes" />
    <result column="already_dead" jdbcType="TINYINT" property="alreadyDead" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="confirm_time" jdbcType="TIMESTAMP" property="confirmTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cn.rmq.api.model.po.Message">
    <result column="message_body" jdbcType="LONGVARCHAR" property="messageBody" />
  </resultMap>
  <sql id="Base_Column_List">
    id, consumer_queue, resend_times, already_dead, status, create_time, confirm_time, 
    update_time
  </sql>
  <sql id="Blob_Column_List">
    message_body
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_message
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_message
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.cn.rmq.api.model.po.Message">
    insert into t_message (id, consumer_queue, resend_times, 
      already_dead, status, create_time, 
      confirm_time, update_time, message_body
      )
    values (#{id,jdbcType=CHAR}, #{consumerQueue,jdbcType=VARCHAR}, #{resendTimes,jdbcType=SMALLINT}, 
      #{alreadyDead,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{confirmTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{messageBody,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cn.rmq.api.model.po.Message">
    insert into t_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="consumerQueue != null">
        consumer_queue,
      </if>
      <if test="resendTimes != null">
        resend_times,
      </if>
      <if test="alreadyDead != null">
        already_dead,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="confirmTime != null">
        confirm_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="messageBody != null">
        message_body,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="consumerQueue != null">
        #{consumerQueue,jdbcType=VARCHAR},
      </if>
      <if test="resendTimes != null">
        #{resendTimes,jdbcType=SMALLINT},
      </if>
      <if test="alreadyDead != null">
        #{alreadyDead,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null">
        #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="messageBody != null">
        #{messageBody,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.rmq.api.model.po.Message">
    update t_message
    <set>
      <if test="consumerQueue != null">
        consumer_queue = #{consumerQueue,jdbcType=VARCHAR},
      </if>
      <if test="resendTimes != null">
        resend_times = #{resendTimes,jdbcType=SMALLINT},
      </if>
      <if test="alreadyDead != null">
        already_dead = #{alreadyDead,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null">
        confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="messageBody != null">
        message_body = #{messageBody,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cn.rmq.api.model.po.Message">
    update t_message
    set consumer_queue = #{consumerQueue,jdbcType=VARCHAR},
      resend_times = #{resendTimes,jdbcType=SMALLINT},
      already_dead = #{alreadyDead,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      message_body = #{messageBody,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.rmq.api.model.po.Message">
    update t_message
    set consumer_queue = #{consumerQueue,jdbcType=VARCHAR},
      resend_times = #{resendTimes,jdbcType=SMALLINT},
      already_dead = #{alreadyDead,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>